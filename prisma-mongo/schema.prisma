// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/@prisma/mongo/client"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL_MONGODB")
}

model User {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  userId        String          @unique @map("user_id")
  name          String
  MeetingAgenda MeetingAgenda[]
  Meeting       Meeting[]

  @@map("users")
}

model UserToken {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  userId       String   @map("user_id")
  refreshToken String   @unique
  expiresAt    DateTime @map("expires_at")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@map("user_tokens")
}

type MeetingTime {
  date  DateTime @db.Date
  start DateTime
  end   DateTime
}

type VotingTime {
  date  DateTime @db.Date
  start DateTime
  end   DateTime
}

type MeetingParticipant {
  userId String @map("user_id")
  name   String
}

model MeetingAgenda {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  createdBy   User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  Meeting     Meeting? @relation(fields: [meetingId], references: [id])
  meetingId   String?  @db.ObjectId
  userId      String   @db.ObjectId

  @@map("meeting_agendas")
}

model Meeting {
  id                  String               @id @default(auto()) @map("_id") @db.ObjectId
  title               String
  description         String
  location            String
  meetingTime         MeetingTime          @map("meeting_time")
  votingTime          VotingTime           @map("voting_time")
  meetingParticipants MeetingParticipant[] @map("meeting_participants")
  meetingAgendas      MeetingAgenda[]
  createdBy           User                 @relation(fields: [userId], references: [id])
  createdAt           DateTime             @default(now()) @map("created_at")
  updatedAt           DateTime             @updatedAt @map("updated_at")
  userId              String               @db.ObjectId

  @@unique([meetingParticipants.userId])
  @@map("meetings")
}
